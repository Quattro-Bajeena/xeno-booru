@model XenoBooru.Web.ViewModels.PostViewModel
@using XenoBooru.Core.Utilities

@{
	ViewData["Title"] = Model.Post.Name;
}



@section Stylesheets{
	<link rel="stylesheet" href="~/css/post_show.css" />
}

@section Notices{

	@foreach (PoolEntry entry in Model.PoolEntries)
	{
	<div class="status-notice">
		@if (entry.PreviousPostId != null)
		{<a asp-route-id="@entry.PreviousPostId">🡨Previous</a>}
		&nbsp;
		@if (entry.NextPostId != null)
		{<a asp-route-id="@entry.NextPostId">Next🡪</a>}
		&nbsp;|&nbsp;
		This post is #@entry.Position in the <a asp-controller="Pool" asp-action="Show" asp-route-id="@entry.Pool.Id">@entry.Pool.Name</a> pool
	</div>
	}

	@if (Model.Post.ParentId != null)
	{
	<div class="status-notice">
		This post has a <a asp-route-id="@Model.Post.ParentId">parent</a>.
	</div>
	}

	@if (Model.Post.Pending)
	{
	<div id="pending-notice" class="status-notice">
		This post is pending moderator approval.
	</div>
	}
}



@section Sidebar{
	<form class="sidebar-section" id="search"><h4>Search</h4><input class="search-bar" type="text"></form>
	<div class="sidebar-section" id="tags">
		<h4>Tags</h4>
		<ul>
			@foreach (Tag tag in Model.Tags)
			{
				<li><a asp-action="Index" asp-route-tags="@tag.Name" class="tag-type-@tag.Type">@tag.ToString()</a>&nbsp;<span class="tag-count">@tag.PostCount</span></li>
			}
		</ul>
	</div>
	<div class="sidebar-section" id="name">
		<h4>Name</h4>
		<span>@Model.Post.Name</span>
	</div>
	<div class="sidebar-section" id="decription">
		<h4>Description</h4>
		<p>
			@Model.Post.Description
		</p>
	</div>
	<div class="sidebar-section" id="statistics">
		<h4>Statistics</h4>
		<ul>
			<li>Id: @Model.Post.Id</li>
			<li>Type: @Model.Post.Type</li>
			<li>Credits: @Model.Post.Credits</li>
			@if (Model.Post.Pending == false)
			{
			<li>
				Likes: @Model.Post.Likes
				@if (Model.Liked == true)
				{<span class="annotation">(Liked)</span>}
			</li>
			}

		</ul>
	</div>
	<div class="sidebar-section" id="options">
		<h4>Options</h4>
		<ul>
			@if (Model.Post.Pending == false && Model.Liked == false)
			{
			<li>
				<form asp-action="GiveLike" asp-route-id="@Model.Post.Id" method="post">
					<button class="link-button switch-button edit-post-button">Like</button>
				</form>
			</li>
			}
			<li><button class="link-button switch-button edit-post-button">Edit</button></li>
			<li><a href="@Model.DownloadUrl" download>Download</a></li>
		</ul>
	</div>
}





@switch (Model.Post.Type)
{
	case PostType.Model:
		@await Html.PartialAsync("_ModelPartial.cshtml", Model.DataUrl);
		break;
	case PostType.Artwork:
		@await Html.PartialAsync("_ArtworkPartial.cshtml", Model.DataUrl);
		break;
	case PostType.Audio:
		@await Html.PartialAsync("_MusicPartial.cshtml", Model.DataUrl);
		break;
	default:
		break;
}

<div id="edit-comment-switch">
	<h3>
		<button class="link-button switch-button edit-post-button">Edit</button>
		&nbsp;|&nbsp;
		<button class="link-button switch-button comments-post-button">Comments</button>
	</h3>
</div>

<form id="edit" method="post" asp-action="Update" asp-route-id="@Model.Post.Id" style="display:none">
	<h3>Edit</h3>
	<table>
		<tbody>
			<tr>
				<th><label for="upload-name">Name</label></th>
				<td><input type="text" id="upload-name" name="Name" value="@Model.Post.Name" /></td>
			</tr>
			<tr>
				<th><label for="upload-description">Description</label></th>
				<td><textarea id="upload-description" name="Description">@Model.Post.Description</textarea></td>
			</tr>
			<tr>
				<th><label for="upload-source">Source</label></th>
				<td><input id="upload-source" type="text" name="Source" value="@Model.Post.Source" /></td>
			</tr>
			<tr>
				<th>
					<label for="upload-credits">Credits</label>
				</th>
				<td><input id="upload-credits" type="text" name="Credits" value="@Model.Post.Credits" /></td>
			</tr>
			<tr>
				<th><label for="tag-input">Tags</label></th>
				<td class="tag-input-container">
					<div id="tag-input-styled"></div>
					<textarea id="tag-input" name="tags" spellcheck="false">@TagUtilities.ToString(Model.Tags)</textarea>
				</td>
			</tr>
		</tbody>
		<tfoot>
			<tr>
				<td></td>
				<td><button>Edit</button></td>
			</tr>
		</tfoot>
	</table>
</form>

<div id="comments">
	<h3>Comments</h3>
	<form id="comments-post" method="POST" asp-controller="Comment" asp-action="Add">
		<input type="hidden" name="PostId" value="@Model.Post.Id" />
		<input type="text" autocomplete="off" id="comment-author" name="author" placeholder="Name" />
		<textarea id="comment-area" name="content"></textarea>
		<button>Post</button>
	</form>
	<ul>
		@foreach (Comment comment in Model.Comments)
		{
			<li class="comment">
				<div class="comment-author">
					<h4>@comment.Author</h4><span class="comment-date">@comment.Date.ToString("dd/MM/yyyy")</span>
				</div>
				<div class="comment-content">
					@comment.Content
				</div>
			</li>
		}
	</ul>
</div>


@section Scripts{
    <script>
	const get_tags_url = "@Url.Action("GetAll", "Tag")";
    </script>
<script src="~/js/option_switching.js" type="module"></script>
<script src="~/js/tag_highlight_input.js" type="module"></script>
}